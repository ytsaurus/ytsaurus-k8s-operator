metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: yt-client
    app.kubernetes.io/managed-by: ytsaurus-k8s-operator
    app.kubernetes.io/name: yt-client
    app.kubernetes.io/part-of: yt-test-ytsaurus
    yt_component: test-ytsaurus-yt-client
    ytsaurus.tech/cluster-name: test-ytsaurus
  name: yt-client-init-job-user
  namespace: ytsaurus-components
  ownerReferences:
  - apiVersion: cluster.ytsaurus.tech/v1
    blockOwnerDeletion: true
    controller: true
    kind: Ytsaurus
    name: test-ytsaurus
    uid: ""
  resourceVersion: "2"
spec:
  backoffLimit: 15
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: yt-client
        app.kubernetes.io/managed-by: ytsaurus-k8s-operator
        app.kubernetes.io/name: yt-client-init-job
        app.kubernetes.io/part-of: yt-test-ytsaurus
        yt_component: test-ytsaurus-yt-client-init-job
        ytsaurus.tech/cluster-name: test-ytsaurus
      name: ytsaurus-init
      namespace: ytsaurus-components
    spec:
      containers:
      - command:
        - bash
        - -c
        - /config/init-cluster.sh
        env:
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K8S_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: ghcr.io/ytsaurus/ytsaurus:stable-24.2.1
        name: ytsaurus-init
        resources: {}
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /config
          name: config
      restartPolicy: OnFailure
      volumes:
      - configMap:
          defaultMode: 320
          name: user-yt-client-init-job-config
        name: config
  ttlSecondsAfterFinished: 600
status:
  succeeded: 1
