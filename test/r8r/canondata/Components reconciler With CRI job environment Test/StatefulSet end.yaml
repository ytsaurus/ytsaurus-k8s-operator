metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: yt-exec-node
    app.kubernetes.io/managed-by: ytsaurus-k8s-operator
    app.kubernetes.io/name: yt-exec-node
    app.kubernetes.io/part-of: yt-test-ytsaurus
    yt_component: test-ytsaurus-yt-exec-node
    ytsaurus.tech/cluster-name: test-ytsaurus
  name: end
  namespace: ytsaurus-components
  ownerReferences:
  - apiVersion: cluster.ytsaurus.tech/v1
    blockOwnerDeletion: true
    controller: true
    kind: Ytsaurus
    name: test-ytsaurus
    uid: ""
  resourceVersion: "1"
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      yt_component: test-ytsaurus-yt-exec-node
  serviceName: exec-nodes
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: yt-exec-node
        app.kubernetes.io/managed-by: ytsaurus-k8s-operator
        app.kubernetes.io/name: yt-exec-node
        app.kubernetes.io/part-of: yt-test-ytsaurus
        yt_component: test-ytsaurus-yt-exec-node
        ytsaurus.tech/cluster-name: test-ytsaurus
    spec:
      containers:
      - command:
        - /usr/bin/ytserver-node
        - --config
        - /config/ytserver-exec-node.yson
        env:
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K8S_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CONTAINERD_ADDRESS
          value: /yt/node-data/image-cache/containerd.sock
        - name: CONTAINERD_NAMESPACE
          value: k8s.io
        - name: CONTAINER_RUNTIME_ENDPOINT
          value: unix:///yt/node-data/image-cache/containerd.sock
        image: ghcr.io/ytsaurus/ytsaurus:stable-24.2.1
        name: ytserver
        ports:
        - containerPort: 10029
          name: metrics
          protocol: TCP
        - containerPort: 9029
          name: rpc
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /orchid/service
            port: metrics
        resources: {}
        securityContext:
          privileged: false
        volumeMounts:
        - mountPath: /yt/node-data
          name: node-data
        - mountPath: /config_template
          name: config-template
          readOnly: true
        - mountPath: /config
          name: config
      - args:
        - --config
        - /config/containerd/containerd.toml
        command:
        - tini
        - --
        - containerd
        env:
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K8S_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CONTAINERD_ADDRESS
          value: /yt/node-data/image-cache/containerd.sock
        - name: CONTAINERD_NAMESPACE
          value: k8s.io
        - name: CONTAINER_RUNTIME_ENDPOINT
          value: unix:///yt/node-data/image-cache/containerd.sock
        image: ghcr.io/ytsaurus/ytsaurus:stable-24.2.1
        name: jobs
        ports:
        - containerPort: 10026
          name: cri-metrics
          protocol: TCP
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /yt/node-data
          name: node-data
        - mountPath: /config_template
          name: config-template
          readOnly: true
        - mountPath: /config
          name: config
        - mountPath: /config/containerd
          name: config-containerd
          readOnly: true
      enableServiceLinks: false
      initContainers:
      - command:
        - bash
        - -xc
        - 'echo ''Init locations''; mkdir -p /yt/node-data/chunk-cache; mkdir -p /yt/node-data/slots;
          mkdir -p /yt/node-data/image-cache; '
        env:
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K8S_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: ghcr.io/ytsaurus/ytsaurus:stable-24.2.1
        name: prepare-locations
        resources: {}
        securityContext:
          privileged: false
        volumeMounts:
        - mountPath: /yt/node-data
          name: node-data
        - mountPath: /config_template
          name: config-template
          readOnly: true
        - mountPath: /config
          name: config
      - command:
        - bash
        - -xc
        - 'echo ''Postprocess config ytserver-exec-node.yson'';echo ''cp /config_template/ytserver-exec-node.yson
          /config/ytserver-exec-node.yson; sed -i -s "s/{K8S_POD_NAME}/${K8S_POD_NAME}/g"
          /config/ytserver-exec-node.yson; sed -i -s "s/{K8S_POD_NAMESPACE}/${K8S_POD_NAMESPACE}/g"
          /config/ytserver-exec-node.yson; sed -i -s "s/{K8S_NODE_NAME}/${K8S_NODE_NAME}/g"
          /config/ytserver-exec-node.yson; sed -i -s "s/{POD_FQDN}/$(hostname -f)/g"
          /config/ytserver-exec-node.yson; sed -i -s "s/{POD_SHORT_HOSTNAME}/$(hostname
          -s)/g" /config/ytserver-exec-node.yson; '' > /config/postprocess-config.sh;
          chmod +x ''/config/postprocess-config.sh''; source /config/postprocess-config.sh;
          cat /config/ytserver-exec-node.yson; '
        env:
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K8S_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: ghcr.io/ytsaurus/ytsaurus:stable-24.2.1
        name: postprocess-config
        resources: {}
        securityContext:
          privileged: false
        volumeMounts:
        - mountPath: /yt/node-data
          name: node-data
        - mountPath: /config_template
          name: config-template
          readOnly: true
        - mountPath: /config
          name: config
      volumes:
      - configMap:
          name: yt-exec-node-config
        name: config-template
      - emptyDir: {}
        name: config
      - configMap:
          name: yt-exec-node-jobs-config
        name: config-containerd
  updateStrategy: {}
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: node-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
    status: {}
status:
  availableReplicas: 0
  replicas: 0
