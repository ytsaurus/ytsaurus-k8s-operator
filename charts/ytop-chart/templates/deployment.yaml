apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ytop-chart.fullname" . }}-controller-manager
  labels:
    control-plane: controller-manager
  {{- include "ytop-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  strategy: {{- toYaml .Values.controllerManager.strategy | nindent 4 }}
  revisionHistoryLimit: {{ .Values.controllerManager.revisionHistoryLimit }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "ytop-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "ytop-chart.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args: {{- toYaml .Values.controllerManager.manager.args | nindent 8 }}
        command:
        - /manager
        env:
        - name: YT_LOG_LEVEL
          value: {{ quote .Values.controllerManager.manager.env.ytLogLevel }}
        {{- if .Values.controllerManager.manager.namespacedScope }}
        - name: WATCH_NAMESPACE
          value: {{ tpl (.Release.Namespace) $ }}
        {{- end }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag
          | default .Chart.AppVersion }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10
          }}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext
          | nindent 10 }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-cert
          readOnly: true
      - args: {{- toYaml .Values.controllerManager.kubeRbacProxy.args | nindent 8 }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.kubeRbacProxy.image.repository }}:{{ .Values.controllerManager.kubeRbacProxy.image.tag
          | default .Chart.AppVersion }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {{- toYaml .Values.controllerManager.kubeRbacProxy.resources | nindent
          10 }}
        securityContext: {{- toYaml .Values.controllerManager.kubeRbacProxy.containerSecurityContext
          | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/certs/tls
          name: metrics-cert
          readOnly: true
      nodeSelector: {{- toYaml .Values.controllerManager.nodeSelector | nindent 8 }}
      tolerations: {{- toYaml .Values.controllerManager.tolerations | nindent 8 }}
      affinity: {{- toYaml .Values.controllerManager.affinity | nindent 8 }}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ include "ytop-chart.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: webhook-cert
        secret:
          defaultMode: 420
          secretName: yt-operator-webhook-cert
      - name: metrics-cert
        secret:
          defaultMode: 420
          secretName: yt-operator-metrics-cert