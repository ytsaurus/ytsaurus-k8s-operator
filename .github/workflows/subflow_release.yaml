on:
  workflow_call:
    inputs:
      release_version:
        required: true
        type: string
      release_suffix:
        required: false
        type: string

jobs:
  release:
    name: Run release
    runs-on: ubuntu-latest

    steps:
      - name: checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.11.2

      - name: Build
        shell: bash
        run: |
          make build

      - name: Docker Hub login
        shell: bash
        run: |
          echo '${{ secrets.DOCKER_HUB_PASSWORD }}' | docker login --username ${{ secrets.DOCKER_HUB_LOGIN}} --password-stdin

      # Uses the `docker/login-action` action to log in to the Container registry
      # using the account and password that will publish the packages.
      # Once published, the packages are scoped to the account defined here.
      - name: Guthub Packages Login
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          make release RELEASE_VERSION=${{ inputs.release_version }} RELEASE_SUFFIX=${{ inputs.release_suffix }}

  send-notifications:
    name: Send notifications
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    steps:
      - name: Send telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          disable_web_page_preview: true
          format: markdown
          message: |
            Workflow *${{github.workflow}}* failed: ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}.
            Commit: ${{github.event.head_commit.sha}}
            Message:
            ```
            ${{github.event.head_commit.message}}
            ```
